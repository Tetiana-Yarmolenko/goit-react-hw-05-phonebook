{"version":3,"sources":["Components/ContactForm/ContactForm.module.css","Components/Transition/alertTransition.module.css","Components/Transition/fadeTransition.module.css","Components/ContactList/ContactList.module.css","Components/App.module.css","Components/Filter/Filter.module.css","Components/Alert/Alert.module.css","Components/Container/Container.module.css","Components/Transition/titleAppear.module.css","Components/Alert/Alert.js","Components/Container/Container.js","Components/ContactForm/ContactForm.js","Components/ContactList/ContactList.js","Components/Filter/Filter.js","Components/App.js","index.js"],"names":["module","exports","Alert","massage","className","s","Container","children","container","INITIAL_STATE","name","phone","showAlert","ContactForm","state","handleChangeForm","target","value","setState","handleFormSubmit","event","preventDefault","onAdd","props","validateForm","id","uuid","resetForm","onCheckUnique","setTimeout","this","CSSTransition","in","timeout","classNames","alertTransition","unmountOnExit","form","onSubmit","label","input","text","placeholder","onChange","button","type","Component","ContactList","contacts","onRemove","TransitionGroup","component","list","map","fadeTransition","item","onClick","Filter","filter","App","toggleAlert","message","handleAddContact","newContact","handleCheckUnique","isExistContacts","find","contact","handleRemoveContact","handleFilterChange","getVisibleContacts","toLowerCase","includes","localStorage","getItem","parsedContact","JSON","parse","prevProps","prevState","stringify","setItem","visibleContacts","titleTransition","appear","title","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4d07dd04.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3vkSV\",\"label\":\"ContactForm_label__2HulQ\",\"input\":\"ContactForm_input__2rQ9D\",\"button\":\"ContactForm_button__1DJ4x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"alertTransition_enter__1fGzQ\",\"enterActive\":\"alertTransition_enterActive__1DwBJ\",\"exit\":\"alertTransition_exit__eS-qN\",\"exitActive\":\"alertTransition_exitActive__2xWNh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"fadeTransition_enter__mMpDp\",\"enterActive\":\"fadeTransition_enterActive__3HMun\",\"exit\":\"fadeTransition_exit__2-G3R\",\"exitActive\":\"fadeTransition_exitActive__2x-In\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3nD3b\",\"item\":\"ContactList_item__1X2QT\",\"button\":\"ContactList_button__2UP1Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__1EABU\",\"contacts\":\"App_contacts__2IYnO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__2lIjg\",\"input\":\"Filter_input__3p09b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Alert\":\"Alert_Alert__21tVO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3N6KT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"titleAppear_appear__14RTc\",\"appearActive\":\"titleAppear_appearActive__3017v\"};","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Alert.module.css';\r\n\r\nconst Alert = ({ massage }) => { \r\n    return (\r\n        <p className={s.Alert}>{massage}</p>\r\n   )\r\n}\r\n\r\nAlert.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Alert\r\n\r\n\r\n\r\n","import s from './Container.module.css'\r\n\r\nfunction Container({ children }) {\r\n    return <div className={s.container}>{children}</div>\r\n}\r\n\r\nexport default Container;","import { Component } from 'react'\r\nimport {CSSTransition} from 'react-transition-group'\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nimport s from \"./ContactForm.module.css\"\r\nimport Alert from '../Alert/Alert'\r\nimport alertTransition from '../Transition/alertTransition.module.css'\r\n\r\n const INITIAL_STATE = {\r\n     name: '',\r\n     phone: '',\r\n     massage: '',\r\n    showAlert: false,\r\n        \r\n}\r\n    \r\nclass ContactForm extends Component {\r\n   \r\n    state = INITIAL_STATE;\r\n\r\n    handleChangeForm = ({ target }) => {\r\n        const { name, value } = target\r\n        this.setState({[name]: value})\r\n    } \r\n\r\n    handleFormSubmit = (event) => {\r\n        event.preventDefault()\r\n        const { name, phone } = this.state;\r\n        \r\n        const { onAdd } = this.props;\r\n        \r\n        const isValidateForm = this.validateForm();\r\n         \r\n\r\n        if (!isValidateForm) return;\r\n        onAdd({ id: uuid(), name, phone })\r\n        this.resetForm();\r\n    }\r\n\r\n\r\n    validateForm = () => {\r\n        const { name, phone } = this.state;\r\n        const { onCheckUnique} = this.props;\r\n        if (!name || !phone) {\r\n       this.setState({ showAlert: true, massage: 'Some field is empty'});\r\n            setTimeout(() => this.setState({ showAlert: false }), 1500);\r\n            return;\r\n          \r\n        }\r\n        \r\n        return onCheckUnique(name);\r\n    \r\n    }\r\n\r\n    resetForm = () => this.setState(INITIAL_STATE);\r\n\r\n    render() {\r\n        const {name, phone, massage, showAlert} = this.state\r\n        return (<>\r\n            <CSSTransition\r\n          in={showAlert}\r\n          timeout={250}\r\n          classNames={alertTransition}\r\n          unmountOnExit\r\n        >\r\n          <Alert massage={massage}/>\r\n        </CSSTransition>\r\n            <form className={s.form}\r\n            onSubmit={this.handleFormSubmit}>\r\n            <label className={s.label}>\r\n                Name\r\n            <input\r\n                    className={s.input}\r\n                    text='text' name='name'\r\n                    placeholder=\"Enter name\"\r\n                    value={name}\r\n                    onChange={this.handleChangeForm} />\r\n            </label>\r\n            <label className={s.label}>\r\n                Phone\r\n            <input\r\n                    className={s.input}\r\n                    text='tel' name='phone'\r\n                    placeholder=\"Enter phone number\"\r\n                    value={phone}\r\n                    onChange={this.handleChangeForm} />\r\n                </label>\r\n            <button className={s.button} type=\"submit\">Add contact</button>\r\n            </form>\r\n        </>)\r\n    }\r\n}\r\n\r\nexport default  ContactForm","import React from 'react'\r\nimport s from './ContactList.module.css'\r\nimport {CSSTransition, TransitionGroup} from 'react-transition-group'\r\n\r\nimport fadeTransition from '../Transition/fadeTransition.module.css'\r\n// При використанні цього шаблону рендериться лише: (дані name, phone - не відображаються ).\r\n// Не можу зрозуміти, що не вірно роблю?\r\n\r\n// const ContactListItem = ({ id, name, phone, onRemove }) => {\r\n//     return (\r\n//         <li key={id} className={s.item}>\r\n//             {name}:{phone}\r\n//             <button className={s.button} type='button' onClick={()=>onRemove(id)}>Delete</button>\r\n//         </li>\r\n//     )\r\n    \r\n// }\r\n// const ContactList = ({ contacts, onRemove }) => {\r\n//     if (contacts.length === 0) return null\r\n//     return (\r\n//         <ul className={s.list}>\r\n//             {contacts.map(({ contact }) => (< ContactListItem {...contact} onRemove={onRemove}/>))}\r\n//         </ul>\r\n//     )\r\n// }\r\nfunction ContactList({ contacts, onRemove }) {\r\n  return (\r\n    < TransitionGroup component=\"ul\"className={s.list}>\r\n      {contacts.map(({ name, phone, id }) => (\r\n        <CSSTransition key={id} timeout={250} classNames={fadeTransition}>\r\n          <li  className={s.item}>\r\n          {name}: {phone}\r\n          <button\r\n            className={s.button}\r\n            type=\"button\"\r\n            onClick={() => onRemove (id)}>\r\n            Delete\r\n          </button>\r\n        </li>\r\n        </CSSTransition>))}\r\n    </ TransitionGroup>);\r\n}\r\n\r\nexport default ContactList","import s from \"./Filter.module.css\"\r\n\r\nconst Filter = ({ filter, onChange }) => {\r\n    return (\r\n         <label className={s.filter}>\r\n        Find contacts by name\r\n        <input\r\n        className={s.input}\r\n        type='text'\r\n        value={filter}\r\n        onChange={({target}) => onChange(target.value)}\r\n        placeholder='Enter name for Search'/>\r\n        </label>)\r\n}\r\nexport default Filter","import { Component } from 'react';\nimport {CSSTransition} from 'react-transition-group'\n\nimport './App.css';\nimport { v4 as uuid } from 'uuid';\nimport s from \"./App.module.css\"\nimport Alert from './Alert/Alert'\nimport Container from './Container/Container'\nimport ContactForm from './ContactForm/ContactForm'\nimport ContactList from './ContactList/ContactList'\nimport Filter from './Filter/Filter'\n\nimport titleTransition from './Transition/titleAppear.module.css'\nimport fadeTransition from './Transition/fadeTransition.module.css'\nimport alertTransition from './Transition/alertTransition.module.css'\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', phone: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', phone: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', phone: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', phone: '227-91-26' },\n    ],\n    filter: '',\n    name: '',\n    phone: '',\n    showAlert: false,\n    massage: '',\n  }\n\n   toggleAlert = message => {\n    this.setState({ showAlert: true, massage: message });\n    setTimeout(() => this.setState({showAlert: false}), 1500);\n  };\n    \n\n// контакти, якщо такі є, зчитуються з локального сховища і записуються в стан.\n \n  componentDidMount() {\n    const contact = localStorage.getItem('contacts');\n    const parsedContact = JSON.parse(contact);\n\n    if (parsedContact) {\n      this.setState({ contacts: parsedContact })\n    }\n  }\n\n  // При додаванні і видаленні контакту, контакти зберігаються в локальне сховище.\n \n  componentDidUpdate(prevProps, prevState,) {\n    const contact = JSON.stringify(this.state.contacts);\n    \n    if (this.state.contacts !== prevState.contacts ) {\n      localStorage.setItem('contact', contact);\n    }\n  }\n\n  handleAddContact = (newContact) => this.setState(({ contacts }) => ({\n    contacts: [...contacts, newContact],\n  })) \n\n\n\n  handleCheckUnique = (name) => {\n    const { contacts } = this.state;\n    const isExistContacts = !!contacts.find((contact) => contact.name === name)\n    isExistContacts && this.toggleAlert('Contacts is already exist')\n    return !isExistContacts\n  }\n\n  handleRemoveContact = (id) =>\n    this.setState(({ contacts }) =>({ contacts: contacts.filter((contact) => contact.id !== id) }))\n  \n  handleFilterChange = (filter) => this.setState({filter})\n  \n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter((contact) => contact.name.toLowerCase().includes(filter.toLowerCase()) )\n  }\n\n \n\n  render() {\n    const { contacts, filter, showAlert, massage } = this.state\n    const visibleContacts = this.getVisibleContacts()\n    return (\n      <Container>\n        <CSSTransition\n          in={showAlert}\n          timeout={250}\n          classNames={alertTransition}\n          unmountOnExit\n        >\n          <Alert massage={massage}/>\n        </CSSTransition>\n      <CSSTransition\n        in\n        timeout={500}\n        classNames={titleTransition}\n         appear\n         unmountOnExit>\n        <h1 className={s.title}>Phonebook</h1>\n      </CSSTransition>\n      \n      <ContactForm contacts={contacts}  onAdd={this.handleAddContact} onCheckUnique={this.handleCheckUnique} />\n      <h2 className={s.contacts}>Contacts</h2>\n      <CSSTransition\n        in={contacts.length > 1}\n        timeout={250}\n        classNames={fadeTransition}\n        unmountOnExit\n      >\n       { < Filter filter={filter} onChange={this.handleFilterChange} />}\n      </CSSTransition>\n     \n      {contacts.length > 0 && (\n          <ContactList\n            contacts={visibleContacts}\n           onRemove={this.handleRemoveContact}\n          />\n        )}\n    </Container>)\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}